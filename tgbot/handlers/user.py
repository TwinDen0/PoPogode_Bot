from aiogram import Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.types.input_media import InputMedia
from aiogram.dispatcher.filters import Text

from tgbot.database.sqlite_db import create_user, set_coord_from_user
from tgbot.keyboards.reply import ReplyMarkupName, get_reply_user
from tgbot.misc.states import UserStates
from tgbot.keyboards.inline import get_inline_user, InlineMarkupName
from tgbot.services.get_city import get_city
from tgbot.services.get_weather import get_weather


async def start(message: types.Message):
    await message.bot.send_chat_action(message.chat.id, 'typing')
    await UserStates.location.set()
    markup = get_reply_user(ReplyMarkupName.start)
    await message.answer('üëãüèª–ü—Ä–∏–≤–µ—Ç! –Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ–≥–æ–¥—ãüå§\n\n'
                        'üîÖ –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É;\n'
                        'üîÖ –î–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –æ–¥–µ–∂–¥—ã/–æ–±—É–≤–∏/–∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥—ã;\n'
                        'üîÖ –¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–ø—Ä–æ—Å–µ –æ —Ç–æ–º, –∫–∞–∫ –æ—â—É—â–∞–µ—Ç—Å—è –ø–æ–≥–æ–¥–∞ –Ω–∞ —É–ª–∏—Ü–µ\n'
                        'üîÖ –Ø –º–æ–≥—É –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞—â–∏—Ç–µ –æ—Ç —Å–æ–ª–Ω—Ü–∞, —É—á–∏—Ç—ã–≤–∞—è –£–§ –∏–Ω–¥–µ–∫—Å;\n'
                        'üîÖ –ü–æ–¥—Å–∫–∞–∂—É, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞—Å—Å–≤–µ—Ç –∏–ª–∏ –∑–∞–∫–∞—Ç;\n'
                        'üîÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–Ω—è—Ç–∏—é —Å–ø–æ—Ä—Ç–æ–º –Ω–∞ —É–ª–∏—Ü–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥—ã;\n'
                        'üîÖ –ü–æ–¥–µ–ª—é—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–º –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–¥—É—Ö–∞.\n\n'
                        '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!\n'
                        '‚úçüèª –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏–ª–∏\n'
                        'üó∫ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é!',
                        parse_mode="html",
                        reply_markup=markup)

async def location(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    coord = [message.location.latitude, message.location.longitude]
    create_user(message.from_user.id, message.from_user.username, message.from_user.first_name, coord)
    # –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    await weather(message, state, coord)

    # get_weather(coord)

async def city(message: types.Message, state: FSMContext):
    city, coord = get_city(message.text)
    create_user(message.from_user.id, message.from_user.username, message.from_user.first_name, coord)
    markup = get_inline_user(InlineMarkupName.city)
    await message.answer(f"–£–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥: {city}\n –í–µ—Ä–Ω–æ?", reply_markup=markup)

async def city_yes(call: types.CallbackQuery, state: FSMContext):
    coord = set_coord_from_user(call.from_user.id)
    await weather(call.message, state, coord)

async def city_no(call: types.CallbackQuery, state: FSMContext):

    # city = get_city(message.text)
    #
    # markup = get_inline_user(InlineMarkupName.start)
    await call.message.answer(f"cryyy")

async def weather(message: types.Message, state: FSMContext, coord=[0,0]):
    print(coord)
    text = get_weather(coord)
    await message.answer(text)


def user(dp: Dispatcher):
    dp.register_message_handler(start, commands="start", state='*')
    dp.register_message_handler(location, content_types='location', state=UserStates.location)
    dp.register_message_handler(city, state=UserStates.location)
    dp.register_callback_query_handler(city_yes, Text(startswith="city_yes"), state=UserStates.location)
    dp.register_callback_query_handler(city_no, Text(startswith="city_no"), state=UserStates.location)