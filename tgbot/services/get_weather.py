import datetime
import requests
from environs import Env


def get_weather(coord):
	env = Env()
	env.read_env(".env")
	open_weather_token = env.str("OPEN_WEATHER_TOKEN")

	code_to_smile = {
		"Clear": "–Ø—Å–Ω–æ‚òÄÔ∏è",
		"Clouds": "–û–±–ª–∞—á–Ω–æ‚õÖÔ∏è",
		"Rain": "–î–æ–∂–¥—åüå¶",
		"Drizzle": "–õ–∏–≤–µ–Ω—åüåß",
		"Thunderstorm": "–ì—Ä–æ–∑–∞üå©",
		"Snow": "–°–Ω–µ–≥‚ùÑÔ∏è",
		"Mist": "–¢—É–º–∞–Ωüå´"
	}

	try:
		# –ü–æ–≥–æ–¥–∞
		r_weather = requests.get(
			f"https://api.openweathermap.org/data/2.5/weather?lat={coord[0]}&lon={coord[1]}&appid={open_weather_token}"
		)
		data = r_weather.json()
		weather_description = data["weather"][0]["main"]
		if weather_description in code_to_smile:
			wd = code_to_smile[weather_description]
		else:
			wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"

		city = data["name"]
		cur_weather = data["main"]["temp"]
		humidity = data["main"]["humidity"]
		pressure = data["main"]["pressure"]
		wind = data["wind"]["speed"]
		sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
		sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
		length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(
			data["sys"]["sunrise"])

		# –£–§ –∏–Ω–¥–µ–∫—Å
		r_uvi = requests.get(
			f"https://currentuvindex.com/api/v1/uvi?latitude={coord[0]}&longitude={coord[1]}"
		)
		data = r_uvi.json()
		time = data["now"]["time"]
		uvi = data["now"]["uvi"]

		# –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞
		r_air_pollution = requests.get(
			f"http://api.openweathermap.org/data/2.5/air_pollution?lat={coord[0]}&lon={coord[1]}&appid={open_weather_token}"
		)
		data = r_air_pollution.json()
		air_pollution = data["list"][0]["main"]["aqi"]

		list = {
			1: "–û—Ç–ª–∏—á–Ω–æ",
			2: "–•–æ—Ä–æ—à–æ",
			3: "–ù–æ—Ä–º–∞–ª—å–Ω–æ",
			4: "–ü–ª–æ—Ö–æ",
			5: "–û—á–µ–Ω—å –ø–ª–æ—Ö–æ"
		}

		# –í—ã–≤–æ–¥ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
		return (f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"

		        f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n\n"

		        f"{wd}\n\n"

		        f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}F¬∞\n"
		        f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
		        f"üåÄ–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n"
		        f"üí®–í–µ—Ç–µ—Ä: {wind} –º/—Å\n\n"

		        f"‚òÄÔ∏è –£–§-–∏–Ω–¥–µ–∫—Å: {uvi}\n"
		        f"üåá–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n"
		        f"üåÑ–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
		        f"üèû–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n\n"

		        f"üå´–ö–∞—á–µ—Ç—Å–≤–æ –≤–æ–∑–¥—É—Ö–∞: {list[air_pollution]}\n"
		        f"üèÉ–ü—Ä–æ–±–µ–∂–∫–∞: –ü–ª–æ—Ö–æ\n\n"

		        f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
		        )

	except Exception as ex:
		print(ex)
		print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
